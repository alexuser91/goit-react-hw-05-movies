{"version":3,"file":"static/js/670.190e8052.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","Pages/Movies.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"FormContainer\":\"SearchForm_FormContainer__AFBBZ\",\"Form\":\"SearchForm_Form__vRFa9\",\"InputStyled\":\"SearchForm_InputStyled__VZW0I\",\"ButtonStyled\":\"SearchForm_ButtonStyled__9O4tk\"};","import { useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport styles from './SearchForm.module.css';\n\nexport const SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('searchQuery') ?? '';\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (evt.target.elements.searchQuery.value.trim() === '') {\n      toast.error('You didnt enter anything. Try again!');\n      return;\n    }\n    setSearchParams({ searchQuery: evt.target.elements.searchQuery.value });\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <div className={styles.FormContainer}>\n      <form className={styles.Form} autoComplete=\"off\" onSubmit={handleSubmit}>\n        <input\n          className={styles.InputStyled}\n          type=\"text\"\n          placeholder=\"Enter movie name...\"\n          name=\"searchQuery\"\n          defaultValue={search}\n        />\n        <button className={styles.ButtonStyled} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from '../components/Services/ApiMovies';\nimport { SearchForm } from '../components/SearchForm/SearchForm';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport { Loader } from '../components/Loader/Loader';\nimport { ColorRing } from 'react-loader-spinner';\nimport toast from 'react-hot-toast';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParam] = useSearchParams();\n  const query = searchParam.get('searchQuery');\n\n  useEffect(() => {\n    if (!query) return;\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovies(query);\n        setMovies([...data.results]);\n        if (!data.results.length) {\n          return toast.error(\n            'Sorry, there are no movies matching your search query. Please try again'\n          );\n        }\n      } catch (error) {\n        console.log('Error', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [query]);\n\n  return (\n    <div>\n      {isLoading && (\n        <Loader>\n          <ColorRing\n            visible={true}\n            height=\"180\"\n            width=\"180\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </Loader>\n      )}\n      <SearchForm />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"LoaderContainer\":\"Loader_LoaderContainer__Ke+vb\"};","import PropTypes from 'prop-types';\nimport styles from './Loader.module.css';\n\nexport const Loader = ({ children }) => {\n  return <div className={styles.LoaderContainer}>{children}</div>;\n};\n\nLoader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"StyledLink\":\"MoviesList_StyledLink__P+Y+F\",\"Ul\":\"MoviesList_Ul__CNRlP\",\"Li\":\"MoviesList_Li__HOVtT\",\"Poster\":\"MoviesList_Poster__VFpM0\",\"MovieTitle\":\"MoviesList_MovieTitle__GiMs2\",\"P\":\"MoviesList_P__cqorR\"};","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const defaultMovieImg = 'https://i.ibb.co/Vq9rRZk/no-image-meme-2.png';\n\n  return (\n    <ul className={styles.Ul}>\n      {movies.map(movie => (\n        <li className={styles.Li} key={movie.id}>\n          <Link\n            className={styles.StyledLink}\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n          >\n            <img\n              className={styles.Poster}\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : defaultMovieImg\n              }\n              alt={movie.title}\n            />\n            <p className={styles.MovieTitle}>{movie.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n"],"names":["SearchForm","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","search","get","_jsx","className","styles","children","_jsxs","autoComplete","onSubmit","evt","preventDefault","target","elements","searchQuery","value","trim","currentTarget","reset","toast","type","placeholder","name","defaultValue","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","query","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovies","sent","_toConsumableArray","results","length","abrupt","t0","console","log","message","finish","stop","apply","arguments","Loader","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","MoviesList","location","useLocation","map","movie","Link","to","concat","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}